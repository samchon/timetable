<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark">
	
	<fx:Metadata>
		[HostComponent("spark.components.VScrollBar")]
	</fx:Metadata> 
	
	<fx:Script>
		/* Define the skin elements that should not be colorized. 
		For scroll bar, the skin itself is colorized but the individual parts are not. */
		static private const exclusions:Array = ["track", "thumb", "decrementButton", "incrementButton"];
		
		override public function get colorizeExclusions():Array {
			return exclusions;
		}
		
		override protected function initializationComplete():void {
			useChromeColor = true;
			super.initializationComplete();
		}
	</fx:Script>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="disabled" />
		<s:State name="inactive" />
	</s:states>
	
	<!---  The default skin class is VScrollBarTrackSkin. -->
	<s:Button id="track" top="16" bottom="15" height="100%"
			  focusEnabled="true"
			  alpha="0.7"
			  skinClass="skins.scrollbar.VScrollBarTrackSkin" />
	
	<!--- The default skin class is VScrollBarThumbSkin. -->
	<s:Button id="thumb" 
			  focusEnabled="false" visible.inactive="false"
			  skinClass="skins.scrollbar.VScrollBarThumbSkin" />
	
	<!--- The default skin class is ScrollBarUpButtonSkin. -->
	<s:Button id="decrementButton" top="0" enabled.inactive="false"
			  focusEnabled="false" 
			  skinClass="skins.scrollbar.VScrollBarUpButtonSkin" />
	
	<!---  The default skin class is ScrollBarDownButtonSkin. -->
	<s:Button id="incrementButton" bottom="0" enabled.inactive="false"
			  focusEnabled="false" 
			  skinClass="skins.scrollbar.VScrollBarDownButtonSkin" />
	
</s:SparkSkin>